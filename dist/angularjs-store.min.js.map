{"version":3,"sources":["webpack://NgStore/webpack/universalModuleDefinition","webpack://NgStore/webpack/bootstrap","webpack://NgStore/external \"angular\"","webpack://NgStore/./src/angularjs-store.ts","webpack://NgStore/./src/models/hook.ts","webpack://NgStore/./src/models/hook-link.ts","webpack://NgStore/./src/models/state-holder.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","angular_1","__importDefault","hook_1","hook_link_1","state_holder_1","NgStore","initialState","this","$$hooks","$$stateHolder","copy","prop","hook","query","callback","matcher","_this","action","Array","isArray","indexOf","RegExp","Error","test","push","run","splice","dispatch","state","isFunction","set","_i","_a","length","Hook","$$called","$$match","$$callback","force","HookLink","destroyer","$$destroyer","destroy","destroyOn","scope","$on","$$state","merge"],"mappings":"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","file":"angularjs-store.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NgStore\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"NgStore\"] = factory(root[\"angular\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import angular from 'angular';\nimport Hook, { HookCallback, HookMatcher } from './models/hook';\nimport HookLink from './models/hook-link';\nimport StateHolder, { create } from './models/state-holder';\n\nexport type HookActionQuery = string | string[] | RegExp;\n\nexport default class NgStore<State> {\n  private $$stateHolder: StateHolder<State>;\n\n  /** All registered hooks from the store */\n  private $$hooks: Array<Hook<State>> = [];\n\n  /**\n   * Create a Store.\n   *\n   * @param initialState - Initial state value.\n   */\n  constructor(initialState: State) {\n    this.$$stateHolder = create(initialState);\n  }\n\n  /**\n   * Get a new copy of state.\n   */\n  public copy(): State;\n\n  /**\n   * Get a new copy of state's specific property.\n   *\n   * @param prop - Property name of state data.\n   */\n  public copy(prop: keyof State): State[keyof State];\n\n  /**\n   * Implementation.\n   */\n  public copy(prop?: keyof State) {\n    return this.$$stateHolder.get(prop);\n  }\n\n  /**\n   * Attach a hook to the store and get notified everytime the given query matched the dispatched action.\n   *\n   * @param query - Used to query the dispatched action.\n   * @param callback - Invoke when query match to dispatched action.\n   */\n  public hook(query: HookActionQuery, callback: HookCallback<State>) {\n    let matcher: HookMatcher;\n\n    if (typeof query === 'string') {\n      matcher = (action) => action === query;\n    } else if (Array.isArray(query)) {\n      matcher = (action) => query.indexOf(action) > -1;\n    } else if (query instanceof RegExp) {\n      matcher = (action) => query.test(action);\n    } else {\n      throw new Error('Hook action query must be a either string, array of string or regular expression.');\n    }\n\n    const hook = new Hook<State>(matcher, callback);\n\n    this.$$hooks.push(hook);\n\n    // Initial run of hook.\n    hook.run('', this.$$stateHolder.get() as State, true);\n\n    return new HookLink(() => {\n      this.$$hooks.splice(this.$$hooks.indexOf(hook), 1);\n    });\n  }\n\n  /**\n   * Dispatch an action for updating state.\n   *\n   * @param action - Action name.\n   * @param state - Store new state.\n   */\n  public dispatch(action: string, state: Partial<State>): void;\n\n  /**\n   * Dispatch an action for updating state.\n   *\n   * @param action - Action name.\n   * @param setState - State setter with the access to previous state.\n   */\n  // tslint:disable-next-line: unified-signatures\n  public dispatch(action: string, setState: (prevState: State) => Partial<State>): void;\n\n  /**\n   * Implementation.\n   */\n  public dispatch(action: string, state: Partial<State> | ((prevState: State) => Partial<State>)) {\n    if (angular.isFunction(state)) {\n      this.$$stateHolder.set(\n        state(this.$$stateHolder.get() as State),\n      );\n    } else {\n      this.$$stateHolder.set(state);\n    }\n\n    for (const hook of this.$$hooks) {\n      hook.run(action, this.$$stateHolder.get() as State);\n    }\n  }\n}\n","export type HookMatcher = (action: string) => boolean;\n\nexport type HookCallback<State> = (state: Readonly<State>, initialRun: boolean) => void;\n\nexport default class Hook<State> {\n  private $$match: HookMatcher;\n  private $$callback: HookCallback<State>;\n  private $$called = false;\n\n  /**\n   * Create a Hook.\n   *\n   * @param matcher - Function that will test the dispatched action.\n   * @param callback - Callback function that trigger when action passed to matcher.\n   */\n  constructor(matcher: HookMatcher, callback: HookCallback<State>) {\n    this.$$match = matcher;\n    this.$$callback = callback;\n  }\n\n  /**\n   * Run the pipes with the given state when the action passed to matcher.\n   *\n   * @param action - Action name.\n   * @param state - A state to pass on every pipe.\n   * @param force - Ignore the action checking and run the pipes. Default: `false`.\n   */\n  public run(action: string, state: Readonly<State>, force = false) {\n    if (!force && !this.$$match(action)) { return; }\n\n    this.$$callback(state, !this.$$called);\n    this.$$called = true;\n  }\n}\n","import { IScope } from 'angular';\n\nexport default class HookLink {\n  private $$destroyer: () => void;\n\n  /**\n   * Create a HookLink.\n   *\n   * @param destroyer - Destroyer function.\n   */\n  constructor(destroyer: () => void) {\n    this.$$destroyer = destroyer;\n  }\n\n  /**\n   * Invoke the destroyer function.\n   */\n  public destroy() {\n    this.$$destroyer();\n  }\n\n  /**\n   * Bind hook to scope. Automatically destroy the hook link when the scope destroyed.\n   *\n   * @param scope - The scope where to bound the HookLink.\n   */\n  public destroyOn(scope: IScope) {\n    scope.$on('$destroy', () => {\n      this.$$destroyer();\n    });\n  }\n}\n","import angular from 'angular';\n\n// tslint:disable-next-line: interface-name\nexport default interface StateHolder<State> {\n  /**\n   * Get a new copy of state or just a specific property of it.\n   *\n   * @param prop - Property name of state data.\n   */\n  get(prop?: keyof State): State | State[keyof State];\n\n  /**\n   * Update the state.\n   *\n   * @param state - New state.\n   */\n  set(state: Partial<State>): void;\n}\n\nexport function create<State>(initialState: State): StateHolder<State> {\n  let $$state: State = angular.copy(initialState);\n\n  function get(prop?: keyof State) {\n    return angular.copy(prop ? $$state[prop] : $$state);\n  }\n\n  function set(state: Partial<State>) {\n    $$state = angular.merge({}, $$state, state);\n  }\n\n  return { get, set };\n}\n"],"sourceRoot":""}